name: Run tests

on:
  # Triggers the workflow on pull request events but only for the master branch
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

jobs:
  handle-syncwith:
    if: github.event_name == 'pull_request'
    name: Call Reusable SyncWith Handler
    uses: NilFoundation/ci-cd/.github/workflows/reusable-handle-syncwith.yml@v1
    with:
      ci-cd-ref: 'v1'
    secrets: inherit

  build-and-test-with-nix:
    needs: [ handle-syncwith ]
    runs-on: ["self-hosted", "aws_autoscaling"]
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Checkout submodules to specified refs
        if: inputs.submodules-refs != ''
        uses: NilFoundation/ci-cd/actions/recursive-checkout@master
        with:
          refs: ${{ inputs.submodules-refs }}
          paths: |
            ${{ github.workspace }}/**
            !${{ github.workspace }}/
            !${{ github.workspace }}/**/.git/**

      # nix is taken from the cloud-init template, no need to install it.
      - name: Build and run tests
        run: |
          nix develop .?submodules=1# -c cmake -G Ninja -B build-ninja -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_ENABLE_TESTS=TRUE && \
          cd build-ninja
          nix develop -c ninja assigner clang transpiler

          # Build IR of the C++ examples
          nix develop -c ninja -k 0 compile_cpp_examples
          ls -al ./examples/cpp

          # Build circuits(.crct) of the C++ examples
          nix develop ../ -c ninja -k 0 cpp_examples_generate_crct
          ls -al ./examples/cpp

          # Build assignment tables(.tbl) of the C++ examples
          nix develop -c ninja -k 0 cpp_examples_generate_tbl_no_check
          ls -al ./examples/cpp

          # Copy assigner output from separate generation mode
          bash ../tests/copy_assigner_outputs.sh ./examples/cpp separate_generatuon

          # Run simultaneous .tbl and .crct generation of the C++ examples
          nix develop -c ninja -k 0 cpp_examples_generate_both
          ls -al ./examples/cpp

          # Copy assigner output from simultaneous generation mode
          bash ../tests/copy_assigner_outputs.sh simultaneous_generation

          # Compare different assigner modes output
          bash ../tests/compare_folders_content.sh separate_generatuon simultaneous_generation

          # Run size estimation for C++ examples
          nix develop -c ninja -k 0 cpp_examples_estimate_size

          # Copy examples' circuits and assignments for uploading
          chmod +x ./examples/copy_artifacts.sh
          ../examples/copy_artifacts.sh examples/cpp examples_output
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/linux@v2
        with:
          check_name: "Linux Test Results"
          files: "results/**/*.xml"
          comment_mode: ${{ github.event.pull_request.head.repo.fork && 'off' || 'always' }} # Don't create PR comment from fork runs
          action_fail_on_inconclusive: true # fail, if no reports
          action_fail: true
      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: junit-test-results
          path: "results/**/*.xml"
          retention-days: 5
          if-no-files-found: error
          overwrite: true
