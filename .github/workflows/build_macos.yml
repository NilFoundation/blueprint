name: build-macos

on:
  push:
    branches: [ master ]
  pull_request:

concurrency:
  group: ${{
    ( github.ref == 'refs/heads/master' &&
    format('{0}/{1}', github.run_id, github.run_attempt) )
    ||
    format('{0}/{1}', github.workflow, github.ref) }}
  cancel-in-progress: true

jobs:
  build-macos:
    runs-on: [ macos-11 ]

    steps:
      - name: Install homebrew
        run: >
          /bin/bash -c "$(curl -fsSL
            https://raw.githubusercontent.com/Homebrew/install/master/install.sh
          )"

      - name: Run brew install
        id: brew-install
        run: |
          brew install \
            boost@1.76 \
            cmake \
            icu4c \
            spdlog \
            bash

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Print toolchain information
        run: |
          git --version
          cc --version
          cmake --version
          bash --version
          python3 --version
          which -a bash
          echo PATH: $PATH

      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Enable ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}

      - name: Configure CMake
        env:
          BOOST_ROOT: "/usr/local/opt/boost@1.76"
          LDFLAGS: "-L/usr/local/opt/icu4c/lib"
          CPPFLAGS: "-I/usr/local/opt/icu4c/include"
        run: |
          cmake -G "Unix Makefiles" \
            -B build \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_TESTS=TRUE .

      - name: Build zkllvm
        run: |
          make -C build assigner clang transpiler -j$(sysctl -n hw.logicalcpu)

      - name: Build IR of the C++ examples
        run: |
          make -C build circuit_cpp_examples -j$(sysctl -n hw.logicalcpu)
          ls -al ./build/examples/cpp

      - name: Build circuit and assigner of the C++ examples
        run: |
          make -C build assign_cpp_examples -j$(sysctl -n hw.logicalcpu)

      - name: Build tests
        run: |
          make -C build all_expected_res_tests -j$(sysctl -n hw.logicalcpu)
          make -C build all_circuit_tests -j$(sysctl -n hw.logicalcpu)

      - name: Run tests
        run: |
          chmod +x ./tests/run_tests.sh
          bash ./tests/run_tests.sh -j$(sysctl -n hw.logicalcpu)

      - name: Run tests on faulty inputs
        run: |
          chmod +x ./tests/run_tests_faulty_input.sh
          bash ./tests/run_tests_faulty_input.sh -j$(sysctl -n hw.logicalcpu)

      - name: Build proof for the circuit of the C++ examples
        run: |
          make -C build prove_cpp_examples -j$(sysctl -n hw.logicalcpu)
